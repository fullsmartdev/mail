module Mail
  grammar Common
  
    rule ALPHA
      [a-zA-Z]
    end

    rule DIGIT
      [0-9]
    end
  
    rule DQUOTE
      '"'
    end

    rule CRLF
      "\r\n"
    end
  
    rule WSP
      [\x09\x20]
    end
  
    rule FWS
      (WSP* CRLF)? WSP+     # Folding white space
      # / obs-FWS
    end

    rule CFWS
      (FWS? comment)* ((FWS? comment) / FWS)
    end

    rule NO_WS_CTL
      [\x01-\x08]   /         # US-ASCII control characters
      [\x0B-\x0C]   /         #  that do not include the
      [\x0E-\x1F]   /         #  carriage return, line feed,
      [\x7f]                  #  and white space characters
      
    end

    rule text
      [\x01-\x09]     /       # Characters excluding CR and LF
      [\x0b-\x0c]     /
      [\x0e-\x7e]
      # / obs-text
    end
  
    rule specials
      "(" / ")" /     # Special characters used in
      "<" / ">" /     #  other parts of the syntax
      "[" / "]" /
      ":" / ";" /
      "@" / '\\' /
      "," / "." /
      DQUOTE
    end
  
    rule quoted_pair
      "\\" text # / obs-qp
    end
  
    rule qtext
      NO_WS_CTL /     # Non white space controls
      [\x21] /        # The rest of the US-ASCII
      [\x23-\x5b] /   #  characters not including "\"
      [\x5d-\x7e]     #  or the quote character
    end

    rule qcontent
      qtext / quoted_pair
    end

    rule quoted_string
      CFWS? DQUOTE (FWS? qcontent)* FWS? DQUOTE CFWS?
    end

    rule ctext
      NO_WS_CTL   /    # Non white space controls
      [\x21-\x27] /    # The rest of the US-ASCII
      [\x2a-\x5b] /    #  characters not including "(",
      [\x5d-\x7e]      #  ")", or "\"
    end

    rule ccontent
      ctext / quoted_pair / comment
    end

    rule comment
      "(" ( FWS? ccontent )* FWS? ")"
    end
  
    rule atext
      ALPHA / DIGIT / # Any character except controls,
      "!" / "#" /     #  SP, and specials.
      "$" / "%" /     #  Used for atoms
      "&" / "'" /
      "*" / "+" /
      "-" / "/" /
      "=" / "?" /
      "^" / "_" /
      "`" / "{" /
      "|" / "}" /
      "~"
    end

    rule atom
      CFWS? atext+ CFWS?
    end

    rule dot_atom
      CFWS? dot_atom_text CFWS?
    end
  
    rule dot_atom_text
      atext+ ("." atext+ )*
    end
  
    rule word
      atom / quoted_string
    end
  
    rule phrase 
      word+ # / obs-phrase
    end

    rule domain_literal
      CFWS? "[" (FWS? dcontent)* FWS? "]" CFWS?
    end

    rule dcontent
      dtext / quoted_pair
    end

    rule dtext
      NO_WS_CTL    /  # Non white space controls
      [\x21-\x5a]  /  # The rest of the US-ASCII characters
      [\x5e-\x7e]     #  not including "[", "]", or "\"
    end

    rule angle_addr
      CFWS? "<" addr_spec ">" CFWS? # / obs-angle-addr
    end

    rule addr_spec
      local_name:local_part "@" domain_name:domain {
        def local_name_value
          local_name.text_value.strip
        end

        def domain_name_value
          domain_name.text_value.strip
        end
      }
    end

    rule name_addr
      name:display_name? angle_addr {
        def display_name_value
          name.text_value.strip
        end
      }
    end
  
    rule local_part
      dot_atom / quoted_string  # / obs_local_part
    end
  
    rule domain
      dot_atom / domain_literal # / obs_domain
    end
  
    rule group
      display_name ":" (mailbox_list / CFWS)? ";" (CFWS)
    end

    rule display_name
      phrase
    end
  
    rule mailbox
      name_addr / addr_spec {
        def format
          "#{name_addr.text_value} <#{addr_spec.text_value}>"
        end
      }
    end

    rule address
      mailbox / group
    end
  
  end
end