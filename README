= Mail

== Introduction

Mail is an internet library for Ruby that is designed to handle emails
generation, parsing and sending in a simple, rubyesque manner.

The purpose of this library is to provide a single point of access to handle
all email functions, including sending and receiving emails.  All network
type actions are done through proxy methods to Net::SMTP, Net::POP3 etc.

Built from my experience with TMail, it is designed to be a pure ruby
implementation that makes generating, sending and parsing emails a no
brainer.

It is also designed form the ground up to work with Ruby 1.9.  This is because
Ruby 1.9 handles text encodings much more magically than Ruby 1.8.x and so
these features have been taken full advantage of in this library allowing
Mail to handle a lot more messages more cleanly than TMail.  Mail does run on
Ruby 1.8.x... it's just not as fun to code.

Finally, Mail has been designed with a very simple object oriented system
that really opens up the email messages you are parsing, if you know what
you are doing, you can fiddle with every last bit of your email directly.

== Installation

If you are using this in production right now, you either _really_ know
what you are doing, or are insane.  This is well spec'd and tested alpha
code.

If you need instructions beyond "go get it from my git repo" then you
probably shouldn't be playing with Mail yet.  Wait till we've wrapped it
up into a gem.

== Usage

All major mail functions should be able to happen from the Mail:: module.

=== Making an email

 require 'mail'
 
 mail = Mail.message do
      from 'mikel@test.lindsaar.net'
        to 'you@test.lindsaar.net'
   subject 'This is a test email'
      body File.read('body.txt')
 end

 mail.to_s #=> "From: mikel@test.lindsaar.net\r\nTo: you@...

=== Making an email, different attribute writers:

 require 'mail'
 
 mail = Mail.message do
   body File.read('body.txt')
 end

 mail['from'] = 'mikel@test.lindsaar.net'
 mail[:to]    = 'you@test.lindsaar.net'
 mail.subject = 'This is a test email'
 
 mail.to_s #=> "From: mikel@test.lindsaar.net\r\nTo: you@...

=== Sending an email:

 require 'mail'

 Mail.defaults do
   smtp '127.0.0.1', 25
 end

 Mail.deliver do
       from 'me@test.lindsaar.net'
         to 'you@test.lindsaar.net'
    subject 'Here is the image you wanted'
       body File.read('body.txt')
   add_file 'New Header Image', '/somefile.png'
 end

=== Getting an email from a pop server:

 require 'mail'
 
 Mail.defaults do
   pop3 'mail.myhost.com.au', 110
   user 'mikel'
   pass 'mypass'
 end
 
 emails = Mail.get_all_mail
 
 emails.length #=> 12

=== Getting error reports from an email:

 require 'mail'
 
 @mail = Mail.read('/path/to/bounce_message.eml')
 
 @mail.bounced?         #=> true
 @mail.final_recipient  #=> rfc822;mikel@dont.exist.com
 @mail.action           #=> failed
 @mail.error_status     #=> 5.5.0
 @mail.diagnostic_code  #=> smtp;550 Requested action not taken: mailbox unavailable 
 @mail.retryable?       #=> false

